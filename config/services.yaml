# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  locale: "en"
  locales: "en|de|es|fr|it|pt|nb|gsw"
  supported_locales: ["en", "de", "es", "fr", "it", "pt", "nb", "gsw"]

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: "../src/Controller/"
    tags: ["controller.service_arguments"]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Builder\AliasCreatedMessageBuilder:
    arguments:
      $appUrl: "%env(APP_URL)%"
      $projectName: "%env(PROJECT_NAME)%"

  App\Builder\RecoveryProcessMessageBuilder:
    arguments:
      $appUrl: "%env(APP_URL)%"
      $projectName: "%env(PROJECT_NAME)%"

  App\Builder\WelcomeMessageBuilder:
    arguments:
      $appUrl: "%env(APP_URL)%"
      $projectName: "%env(PROJECT_NAME)%"

  App\Command\UsersMailCryptCommand:
    arguments:
      $mailCrypt: "%env(MAIL_CRYPT)%"

  App\Command\UsersRegistrationMailCommand:
    arguments:
      $defaultLocale: "%kernel.default_locale%"

  App\Command\UsersRemoveCommand:
    arguments:
      $mailLocation: "%env(DOVECOT_MAIL_LOCATION)%"

  App\Command\UsersResetCommand:
    arguments:
      $mailLocation: "%env(DOVECOT_MAIL_LOCATION)%"

  App\Command\VoucherCreateCommand:
    arguments:
      $appUrl: "%env(APP_URL)%"

  App\Controller\DovecotController:
    arguments:
      $mailCryptEnv: "%env(MAIL_CRYPT)%"
      $mailLocation: "%env(DOVECOT_MAIL_LOCATION)%"
      $mailUid: "%env(DOVECOT_MAIL_UID)%"
      $mailGid: "%env(DOVECOT_MAIL_GID)%"

  App\EventListener\:
    resource: "../src/EventListener/*"
    tags:
      - { name: kernel.event_subscriber }

  App\EventListener\LoginListener:
    arguments:
      $mailCryptEnv: "%env(MAIL_CRYPT)%"

  App\EventListener\LocaleListener:
    arguments:
      $defaultLocale: "%locale%"
      $supportedLocales: "%supported_locales%"

  App\Handler\WebhookHandler:
    arguments:
      $webhookUrl: "%env(WEBHOOK_URL)%"
      $webhookSecret: "%env(WEBHOOK_SECRET)%"

  App\Handler\MailHandler:
    arguments:
      $from: "%env(SENDER_ADDRESS)%"
      $name: "%env(APP_NAME)%"

  App\Handler\UserRegistrationInfoHandler:
    arguments:
      $to: "%env(NOTIFICATION_ADDRESS)%"

  App\Handler\UserRestoreHandler:
    arguments:
      $mailCryptEnv: "%env(MAIL_CRYPT)%"

  App\Handler\RegistrationHandler:
    arguments:
      $registrationOpen: "%env(REGISTRATION_OPEN)%"
      $mailCrypt: "%env(MAIL_CRYPT)%"

  App\Handler\SuspiciousChildrenHandler:
    arguments:
      $to: "%env(NOTIFICATION_ADDRESS)%"

  App\Handler\WkdHandler:
    arguments:
      $wkdDirectory: "%env(WKD_DIRECTORY)%"
      $wkdFormat: "%env(WKD_FORMAT)%"

  App\EventListener\AliasCreationListener:
    arguments:
      $sendMail: "%env(SEND_MAIL)%"
      $defaultLocale: "%kernel.default_locale%"

  App\EventListener\RecoveryProcessListener:
    arguments:
      $sendMail: "%env(SEND_MAIL)%"
      $defaultLocale: "%kernel.default_locale%"

  App\EventListener\RegistrationListener:
    arguments:
      $sendMail: "%env(SEND_MAIL)%"
      $defaultLocale: "%kernel.default_locale%"

  App\Security\ApiAccessTokenHandler:
    arguments:
      $accessTokenDovecot: "%env(DOVECOT_API_ACCESS_TOKEN)%"
      $accessTokenKeycloak: "%env(KEYCLOAK_API_ACCESS_TOKEN)%"
      $accessTokenRetention: "%env(RETENTION_API_ACCESS_TOKEN)%"
      $accessTokenPostfix: "%env(POSTFIX_API_ACCESS_TOKEN)%"

  userli.admin.user:
    class: App\Admin\UserAdmin
    public: true
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          group: "Mail",
          label: "User",
          code: userli.admin.user,
          model_class: App\Entity\User,
          controller: App\Controller\UserCRUDController,
        }
    calls:
      - [setPasswordUpdater, ['@App\Helper\PasswordUpdater']]
      - [setDomainGuesser, ['@App\Guesser\DomainGuesser']]
      - [setMailCryptKeyHandler, ['@App\Handler\MailCryptKeyHandler']]
      - [setMailCryptVar, ["%env(MAIL_CRYPT)%"]]
      - [setSecurity, ['@Symfony\Bundle\SecurityBundle\Security']]

  userli.admin.domain:
    class: App\Admin\DomainAdmin
    public: true
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          group: "Mail",
          label: "Domain",
          code: userli.admin.domain,
          model_class: App\Entity\Domain,
        }
    calls:
      - [setDomainCreator, ['@App\Creator\DomainCreator']]
      - [
          setEventDispatcher,
          ['@Symfony\Contracts\EventDispatcher\EventDispatcherInterface'],
        ]

  userli.admin.alias:
    class: App\Admin\AliasAdmin
    public: true
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          group: "Mail",
          label: "Alias",
          code: userli.admin.alias,
          model_class: App\Entity\Alias,
          controller: App\Controller\AliasCRUDController,
        }
    calls:
      - [setDomainGuesser, ['@App\Guesser\DomainGuesser']]

  userli.admin.voucher:
    class: App\Admin\VoucherAdmin
    public: true
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          group: "Mail",
          label: "Voucher",
          code: userli.admin.voucher,
          model_class: App\Entity\Voucher,
        }

  userli.admin.block.statistics:
    class: App\Block\StatisticsBlockService
    public: true
    tags:
      - { name: sonata.block }
    arguments:
      - '@Twig\Environment'
      - '@Doctrine\ORM\EntityManagerInterface'

  userli.admin.reservedname:
    class: App\Admin\ReservedNameAdmin
    public: true
    tags:
      - {
          name: sonata.admin,
          manager_type: orm,
          group: "Mail",
          label: "Reserved Name",
          code: userli.admin.reservedname,
          model_class: App\Entity\ReservedName,
        }
