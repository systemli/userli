# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
    locales: 'en|de|es|fr|it|pt|nb|gsw'
    supported_locales: ['en', 'de', 'es', 'fr', 'it', 'pt', 'nb', 'gsw']
    navbar_left:
        -
            name: 'navbar_left.about-us.text'
            url: 'navbar_left.about-us.link'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Builder\AliasCreatedMessageBuilder:
        arguments:
            $appUrl:       "%env(APP_URL)%"
            $projectName:  "%env(PROJECT_NAME)%"

    App\Builder\RecoveryProcessMessageBuilder:
        arguments:
            $appUrl:       "%env(APP_URL)%"
            $projectName:  "%env(PROJECT_NAME)%"

    App\Builder\WelcomeMessageBuilder:
        arguments:
            $appUrl:       "%env(APP_URL)%"
            $projectName:  "%env(PROJECT_NAME)%"

    App\Command\UsersCheckPasswordCommand:
        arguments:
            $mailCrypt: "%env(MAIL_CRYPT)%"
            $mailLocation: "%env(DOVECOT_MAIL_LOCATION)%"
            $mailUid: "%env(DOVECOT_MAIL_UID)%"
            $mailGid: "%env(DOVECOT_MAIL_GID)%"

    App\Command\UsersMailCryptCommand:
        arguments:
            $mailCrypt: "%env(MAIL_CRYPT)%"

    App\Command\UsersRegistrationMailCommand:
        arguments:
            $defaultLocale: "%kernel.default_locale%"

    App\Command\UsersRemoveCommand:
        arguments:
            $mailLocation: "%env(DOVECOT_MAIL_LOCATION)%"

    App\Command\UsersResetCommand:
        arguments:
            $mailLocation: "%env(DOVECOT_MAIL_LOCATION)%"

    App\Command\VoucherCreateCommand:
        arguments:
            $appUrl: "%env(APP_URL)%"

    App\Controller\DovecotController:
        arguments:
            $mailCryptEnv: "%env(MAIL_CRYPT)%"
            $mailLocation: "%env(DOVECOT_MAIL_LOCATION)%"
            $mailUid: "%env(DOVECOT_MAIL_UID)%"
            $mailGid: "%env(DOVECOT_MAIL_GID)%"

    App\EventListener\:
        resource: '../src/EventListener/*'
        tags:
            - { name: kernel.event_subscriber }

    App\EventListener\LocaleListener:
        arguments:
            $defaultLocale: "%locale%"
            $supportedLocales: "%supported_locales%"

    App\Handler\:
        resource: '../src/Handler/*'
        public: true

    App\Form\PasswordChangeType:
        tags:
            - { name: form.type, alias: password_change }

    App\Form\PlainPasswordType:
        tags:
            - { name: form.type, alias: plain_password }

    App\Form\RecoveryProcessType:
        tags:
            - { name: form.type, alias: recovery }

    App\Form\RegistrationType:
        tags:
            - { name: form.type, alias: registration }

    App\Handler\MailHandler:
        arguments:
            $from: "%env(SENDER_ADDRESS)%"
            $name: "%env(APP_NAME)%"

    App\Handler\UserRegistrationInfoHandler:
        arguments:
            $to: "%env(NOTIFICATION_ADDRESS)%"

    App\Handler\RegistrationHandler:
        public: true
        arguments:
            $registrationOpen: "%env(REGISTRATION_OPEN)%"
            $mailCrypt: '%env(MAIL_CRYPT)%'

    App\Handler\SuspiciousChildrenHandler:
        arguments:
            $to: "%env(NOTIFICATION_ADDRESS)%"

    App\Handler\UserAuthenticationHandler:
        arguments:
            $passwordHasherFactory: '@security.password_hasher_factory'

    App\Handler\WkdHandler:
        arguments:
            $wkdDirectory: "%env(WKD_DIRECTORY)%"
            $wkdFormat: "%env(WKD_FORMAT)%"

    App\Helper\PasswordUpdater:
        public: true

    App\EventListener\AliasCreationListener:
        arguments:
            $sendMail: "%env(SEND_MAIL)%"
            $defaultLocale: "%kernel.default_locale%"

    App\EventListener\RecoveryProcessListener:
        arguments:
            $sendMail: "%env(SEND_MAIL)%"
            $defaultLocale: "%kernel.default_locale%"

    App\EventListener\RegistrationListener:
        arguments:
            $sendMail: "%env(SEND_MAIL)%"
            $defaultLocale: "%kernel.default_locale%"

    App\Builder\MenuBuilder:
        arguments:
            $navbarLeft: '%navbar_left%'

    App\Remover\VoucherRemover:
        arguments:
            - '@Doctrine\ORM\EntityManagerInterface'
        public: true

    App\Security\ApiAccessTokenHandler:
        arguments:
            $accessTokenDovecot: '%env(DOVECOT_API_ACCESS_TOKEN)%'
            $accessTokenKeycloak: '%env(KEYCLOAK_API_ACCESS_TOKEN)%'
            $accessTokenRetention: '%env(RETENTION_API_ACCESS_TOKEN)%'
            $accessTokenPostfix: '%env(POSTFIX_API_ACCESS_TOKEN)%'

    App\Sender\WelcomeMessageSender:
        public: true

    App\Validator\PasswordPolicyValidator:
        tags:
            - { name: validator.constraint_validator, alias: password_policy }

    App\Validator\Constraints\EmailDomainValidator:
        tags:
            - { name: validator.constraint_validator }

    userli.admin.user:
        class: App\Admin\UserAdmin
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Mail", label: "User" }
        arguments:
            - ~
            - App\Entity\User
            - App\Controller\UserCRUDController
        calls:
            - [setPasswordUpdater, ['@App\Helper\PasswordUpdater']]
            - [setDomainGuesser, ['@App\Guesser\DomainGuesser']]
            - [setMailCryptKeyHandler, ['@App\Handler\MailCryptKeyHandler']]
            - [setMailCryptVar, ["%env(MAIL_CRYPT)%"]]

    userli.admin.domain:
        class: App\Admin\DomainAdmin
        public: true
        tags:
           - { name: sonata.admin, manager_type: orm, group: "Mail", label: "Domain" }
        arguments:
            - ~
            - App\Entity\Domain
            - ~
        calls:
            - [setDomainCreator, ['@App\Creator\DomainCreator']]
            - [setEventDispatcher, ['@Symfony\Contracts\EventDispatcher\EventDispatcherInterface']]

    userli.admin.alias:
        class: App\Admin\AliasAdmin
        public: true
        tags:
           - { name: sonata.admin, manager_type: orm, group: "Mail", label: "Alias" }
        arguments:
            - ~
            - App\Entity\Alias
            - App\Controller\AliasCRUDController
        calls:
            - [setDomainGuesser, ['@App\Guesser\DomainGuesser']]

    userli.admin.voucher:
        class: App\Admin\VoucherAdmin
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Mail", label: "Voucher" }
        arguments:
            - ~
            - App\Entity\Voucher
            - ~

    userli.admin.block.statistics:
        class: App\Block\StatisticsBlockService
        public: true
        tags:
            - { name: sonata.block }
        arguments:
            - '@Twig\Environment'
            - '@Doctrine\ORM\EntityManagerInterface'

    userli.admin.reservedname:
        class: App\Admin\ReservedNameAdmin
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Mail", label: "Reserved Name" }
        arguments:
            - ~
            - App\Entity\ReservedName
            - ~

    userli.menu.navbar_left:
        class: Knp\Menu\MenuItem
        public: true
        factory: ['@App\Builder\MenuBuilder', createNavbarLeft]
        tags:
            - { name: knp_menu.menu, alias: navbar-left }

    userli.menu.navbar_right:
        class: Knp\Menu\MenuItem
        public: true
        factory: ['@App\Builder\MenuBuilder', createNavbarRight]
        tags:
            - { name: knp_menu.menu, alias: navbar-right }

    Symfony\Component\Security\Http\HttpUtils:
        alias: security.http_utils

    Knp\Menu\FactoryInterface:
        alias: knp_menu.factory
