name: Integration

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    name: PHPUnit
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: openssl, sodium
          coverage: xdebug
          tools: composer

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-scripts

      - name: Prepare Database Schema
        run: bin/console doctrine:schema:create --env=test

      - name: Prepare Assets
        run: |
          yarn
          yarn encore dev

      - name: Load Fixtures
        run: bin/console doctrine:fixtures:load --group=basic --env=test --no-interaction

      - name: PHPUnit
        run: bin/phpunit --coverage-clover=coverage.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  integration-sqlite:
    runs-on: ubuntu-latest
    name: Behat (SQLite)
    needs: unit-tests
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: openssl, sodium
          tools: composer

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Integration with SQLite
        run: make integration
        env:
          DATABASE_DRIVER: pdo_sqlite
          DATABASE_URL: sqlite:///%kernel.project_dir%/var/db_test.sqlite

  integration-mariadb:
    runs-on: ubuntu-latest
    name: Behat (MariaDB)
    needs: unit-tests
    services:
      mariadb:
        image: mariadb:10.5
        ports:
          - 3306
        env:
          MYSQL_USER: mail_test
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: mail_test
          MYSQL_ROOT_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: openssl, sodium, mysql
          tools: composer

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Integration with MariaDB
        run: make integration
        env:
          DATABASE_DRIVER: pdo_mysql
          DATABASE_URL: mysql://mail_test:password@127.0.0.1:${{ job.services.mariadb.ports[3306] }}/mail

  integration-postgres:
    runs-on: ubuntu-latest
    name: Behat (PostgreSQL)
    needs: unit-tests
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432
        env:
          POSTGRES_USER: mail_test
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mail_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: openssl, sodium, pgsql
          tools: composer

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Integration with PostgreSQL
        run: make integration
        env:
          DATABASE_DRIVER: pdo_pgsql
          DATABASE_URL: pgsql://mail_test:password@127.0.0.1:${{ job.services.postgres.ports[5432] }}/mail?charset=UTF8
